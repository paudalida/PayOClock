
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$GM18-primary: mat.define-palette(mat.$indigo-palette);
$GM18-accent: mat.define-palette(mat.$light-blue-palette);

// The warn palette is optional (defaults to red).
$GM18-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$custom-typography: mat.define-typography-config(
  $font-family: 'poppins, sans-serif',
);

$GM18-theme: mat.define-light-theme((
  color: (
    primary: $GM18-primary,
    accent: $GM18-accent,
    warn: $GM18-warn,
  ),
  typography: $custom-typography,
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($GM18-theme);

:root {
  --background-color: #FAF9F6;
  --primary-color: #254CA3;
  --secondary-color: ;
  --header-color: #EEEEEE;
  --buttons-hover: #1e3e82;
  --table-background: #F4F4F4;
  --table-border: #BFBFBF;
  --light-blue:#254ca3db;
  --dark-blue:#254ca357;
  --graph-light-color: #789dc9;
  --time-in-button: #289451;
  --time-in-button-hover: #298d4f;
  --danger: #cb001e;
  --danger-hover: #922b21;
  --cancel: #777777;
  --cancel-hover: #6B6B6B;
  --black: #000;
  --white: #FFF;
  --disabled-button: #c6cac7;
  --landing-font: #454444;
  --about-section: #DDE0EC;
  --present: #479c4b;
  --late: #e8bb07f4;
  --absent: #e1060a;
}

* { 
  margin: 0; 
}

body {
  background-color: var(--background-color);
  font-family: 'poppins';
  transition: all 0.5s ease;
  overflow-x: hidden;
}

.mat-mdc-tab .mdc-tab--active .mdc-tab__text-label {
  color: var(--mat-tab-header-active-label-text-color);
  font-size: 16px;
}

.mat-mdc-tab .mdc-tab__text-label {
  color: var(--mat-tab-header-inactive-label-text-color);
  display: inline-flex;
  align-items: center;
  font-size: 16px;
  font-weight: 500;
}

/* Main buttons */
.btn-primary {
  background-color: var(--primary-color);
  color: white;
}

.btn-primary:hover {
  background-color: var(--buttons-hover); 
}

.btn-secondary {
  background-color: var(--cancel);
}

.btn-secondary:hover {
  background-color: var(--cancel-hover);
}

.btn-danger {
  background-color: var(--danger);
}

.btn-danger:hover {
  background-color: var(--danger-hover);
}

.btn-success {
  background-color: #289451;
}

.btn-success:hover {
  background-color: #196f3d;
}

.btn-pending {
  background-color: var(--late);
}

.btn-pending:hover {
  background-color: #be9800f4;
}

/* Other buttons */
.btn-invalid {
  background: var(--disabled-button);
}

.btn-loading-primary {
  background-color: var(--buttons-hover);
  color: white;
}

/* swal */
.toast {
  width: fit-content;
}


/* Animations */ 

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.hidden {
  opacity: 0;
  transform: translateY(20px);
}

.slideIn {
  animation: slideIn 1.5s ease-out forwards; 
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(7%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse {
  0% {
    transform: scale(0.9);
  }
  50% {
    transform: scale(1);
  }
  100% {
    transform: scale(0.9);
  }
}





